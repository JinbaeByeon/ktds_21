SELECT DEPARTMENT_ID 
	 , DEPARTMENT_NAME 
	 , MANAGER_ID 
	 , LOCATION_ID
  FROM DEPARTMENTS d
 WHERE MANAGER_ID != 103
;
 
SELECT FIRST_NAME 
	 , LAST_NAME 
  FROM EMPLOYEES
 WHERE MANAGER_ID = 103
 ORDER BY FIRST_NAME
;
 
SELECT LAST_NAME
	 , FIRST_NAME 
  FROM EMPLOYEES
 WHERE FIRST_NAME = 'Steven' OR FIRST_NAME = 'Peter'
 ORDER BY LAST_NAME DESC
;
 
SELECT CITY
	 , STREET_ADDRESS 
  FROM LOCATIONS
 WHERE COUNTRY_ID = 'US'
 ORDER BY CITY
;

SELECT EMPLOYEE_ID 
	 , FIRST_NAME 
	 , SALARY 
  FROM EMPLOYEES
--WHERE SALARY BETWEEN 10000 AND 15000
 WHERE (SALARY >= 10000
   AND SALARY <= 15000)
    OR SALARY >= 20000
 ORDER BY SALARY DESC
;

SELECT EMPLOYEE_ID
	 , FIRST_NAME 
	 , MANAGER_ID 
	 , COMMISSION_PCT 
  FROM EMPLOYEES
 WHERE COMMISSION_PCT IS NULL
   AND MANAGER_ID = 100
 ORDER BY EMPLOYEE_ID 
;


SELECT *
  FROM EMPLOYEES
 WHERE JOB_ID NOT IN ('FI_MGR','ST_MAN')
   AND SALARY <= 10000
 ORDER BY HIRE_DATE
;

SELECT *
  FROM EMPLOYEES
 WHERE JOB_ID != 'FI_MGR'
   AND JOB_ID != 'ST_MAN'
   AND SALARY <= 10000
   AND COMMISSION_PCT IS NOT NULL
 ORDER BY HIRE_DATE
;


SELECT *
  FROM EMPLOYEES
 WHERE (FIRST_NAME = 'Bruce'
    OR LAST_NAME = 'Chen')
    AND JOB_ID  ='FI_ACCOUNT'
;

SELECT *
  FROM EMPLOYEES
 WHERE JOB_ID LIKE 'FI_ACCOUNT'
;


SELECT *
  FROM EMPLOYEES
 WHERE LOWER(FIRST_NAME) LIKE '%s%'
;
 
SELECT *
  FROM EMPLOYEES
 WHERE LOWER(FIRST_NAME) LIKE '%ste%'
;

SELECT *
  FROM EMPLOYEES
 WHERE PHONE_NUMBER LIKE '515.%'
 ORDER BY FIRST_NAME DESC 
;

SELECT *
  FROM EMPLOYEES
 WHERE JOB_ID LIKE 'A%S'
 ORDER BY LAST_NAME
;


SELECT DEPARTMENT_ID 
	 , DEPARTMENT_NAME
  FROM DEPARTMENTS
-- WHERE LOWER(DEPARTMENT_NAME) LIKE '%i%'
 WHERE DEPARTMENT_NAME LIKE '%i%'
    OR DEPARTMENT_NAME LIKE '%I%'
 ORDER BY LOCATION_ID DESC
 	 , DEPARTMENT_ID 
;


SELECT DEPARTMENT_NAME 
  FROM DEPARTMENTS
 WHERE DEPARTMENT_NAME NOT LIKE '%IT%'
 ORDER BY DEPARTMENT_NAME DESC
;


SELECT DEPARTMENT_NAME
  FROM DEPARTMENTS
 WHERE DEPARTMENT_NAME LIKE '%Co%'
   AND DEPARTMENT_NAME NOT LIKE '%T%'
;
 

SELECT *
  FROM EMPLOYEES
 WHERE FIRST_NAME LIKE '___'
;


SELECT *
  FROM EMPLOYEES
 WHERE FIRST_NAME LIKE '____d%'
;


SELECT *
  FROM EMPLOYEES
 WHERE LAST_NAME LIKE '_e%'
;
 
SELECT JOB_ID
	 , 1
  FROM EMPLOYEES
;
 
SELECT JOB_ID
	 , COUNT(1)
  FROM EMPLOYEES
 GROUP BY JOB_ID
 ORDER BY COUNT(1) DESC
;


SELECT DEPARTMENT_ID
	 , COUNT(1)
  FROM EMPLOYEES
 GROUP BY DEPARTMENT_ID
;

SELECT DEPARTMENT_ID
	 , SUM(SALARY)
  FROM EMPLOYEES
 GROUP BY DEPARTMENT_ID
;

SELECT JOB_ID
	 , SUM(SALARY)
  FROM EMPLOYEES
 GROUP BY JOB_ID
; 
 
SELECT DEPARTMENT_ID 
	 , JOB_ID 
	 , SUM(SALARY)
  FROM EMPLOYEES
 GROUP BY DEPARTMENT_ID 
 	 , JOB_ID 
;


SELECT DEPARTMENT_ID
	 , MAX(SALARY)
  FROM EMPLOYEES
 GROUP BY DEPARTMENT_ID
;

SELECT JOB_ID
	 , MIN(SALARY)
  FROM EMPLOYEES
 GROUP BY JOB_ID
;
	
SELECT DEPARTMENT_ID 
	 , JOB_ID 
	 , MAX(SALARY)
	 , MIN(SALARY)
  FROM EMPLOYEES
 GROUP BY DEPARTMENT_ID 
 	 , JOB_ID
 
SELECT MAX(SALARY)
	 , MIN(SALARY)
	 , AVG(SALARY)
	 , SUM(SALARY)
	 , COUNT(SALARY) 
  FROM EMPLOYEES
;


SELECT DEPARTMENT_ID 
	 , COUNT(1)
	 , MAX(SALARY)
	 , MIN(SALARY)
	 , AVG(SALARY)
	 , SUM(SALARY)
  FROM EMPLOYEES
 GROUP BY DEPARTMENT_ID 
;


SELECT MANAGER_ID
	 , COUNT(1)
	 , MAX(SALARY)
	 , MIN(SALARY)
	 , AVG(SALARY)
	 , SUM(SALARY) 
  FROM EMPLOYEES
 GROUP BY MANAGER_ID 
;


SELECT DEPARTMENT_ID 
	 , MAX(SALARY)
	 , MIN(SALARY)
	 , AVG(SALARY) 
  FROM EMPLOYEES e 
 WHERE JOB_ID != 'SA_REP'
 GROUP BY DEPARTMENT_ID 
;
 
SELECT DEPARTMENT_ID
	 , COUNT(1)
  FROM EMPLOYEES
 GROUP BY DEPARTMENT_ID	
HAVING COUNT(1) > 1
;
 
SELECT e1.MANAGER_ID
	 , e2.PHONE_NUMBER 
	 , COUNT(1)
  FROM EMPLOYEES e1, EMPLOYEES e2
  WHERE e1.MANAGER_ID = e2.EMPLOYEE_ID
 GROUP BY e1.MANAGER_ID
 	 , e2.PHONE_NUMBER
HAVING COUNT(1) > 1
;

SELECT JOB_ID 
	 , AVG(SALARY)
	 , MAX(SALARY)
	 , MIN(SALARY)
  FROM EMPLOYEES
 GROUP BY JOB_ID 
HAVING AVG(SALARY) >= 7000
;

SELECT DEPARTMENT_ID 
	 , COUNT(1)
	 , AVG(SALARY)
	 , MAX(SALARY)
	 , MIN(SALARY)
  FROM EMPLOYEES e 
 GROUP BY DEPARTMENT_ID
HAVING COUNT(1) >=3
   AND AVG(SALARY) >= 5000
;

/*
 * 최저 연봉보다 많이 받는 사원들의 모든 정보를 조회
 */
SELECT *
  FROM EMPLOYEES
 WHERE SALARY > (SELECT MIN(SALARY)
 		  		   FROM EMPLOYEES) 
;	

/*
 * 평균 연봉보다 많이 받는 사원들의 모든 정보 조회
 */
SELECT *
  FROM EMPLOYEES
 WHERE SALARY > (SELECT AVG(SALARY)
 				   FROM EMPLOYEES)
;

/*
 * EMPLOYEES 테이블에서 FIRST_NAME은 'Steven' LAST_NAME은 'King'을 MANAGER_ID로 두고 있는 모든 데이터 조회
 */  
SELECT *
  FROM EMPLOYEES
 WHERE MANAGER_ID = (SELECT EMPLOYEE_ID 
 					   FROM EMPLOYEES
 					  WHERE FIRST_NAME ='Steven'
					    AND LAST_NAME = 'King')
;

/*
 * EMPLOYEES 테이블에서 EMPLOYEE_ID가 102번인 사원의 연봉과
 * 동일한 연봉을 받는 모든 사원의 정보를 조회한다.
 * 단 102번은 조회에서 제외
 */
SELECT *
  FROM EMPLOYEES
 WHERE SALARY = (SELECT SALARY
 				   FROM EMPLOYEES
 				  WHERE EMPLOYEE_ID = 102)
   AND EMPLOYEE_ID != 102
;

/*
 * EMPLOYEES 테이블에서 EMPLOYEE_ID가 113번과
 * 동일한 DEPARTMENT_ID를 가지는 모든 사원의 정보 출력
 * 단, 113번은 조회에서 제외
 */
SELECT *
  FROM EMPLOYEES e 
 WHERE DEPARTMENT_ID = (SELECT DEPARTMENT_ID
 						  FROM EMPLOYEES
 						 WHERE EMPLOYEE_ID = 113)
   AND EMPLOYEE_ID != 113
;


SELECT *
  FROM EMPLOYEES
 WHERE JOB_ID = (SELECT JOB_ID
 				   FROM EMPLOYEES
 				  WHERE EMPLOYEE_ID = 115)
   AND EMPLOYEE_ID != 115
;


SELECT *
  FROM EMPLOYEES
 WHERE JOB_ID IN (SELECT JOB_ID
 				   FROM EMPLOYEES
 				  WHERE FIRST_NAME LIKE ('J%'))
;


SELECT *
  FROM EMPLOYEES
 WHERE SALARY IN (SELECT SALARY
 					FROM EMPLOYEES
 				   WHERE EMPLOYEE_ID IN (116, 201))
   AND EMPLOYEE_ID NOT IN (116, 201)
;


SELECT *
  FROM EMPLOYEES
 WHERE MANAGER_ID IN (SELECT MANAGER_ID
 						FROM EMPLOYEES
 					   WHERE EMPLOYEE_ID IN (103, 206, 115))
  AND EMPLOYEE_ID NOT IN (103, 206, 115)
;

SELECT EMPLOYEE_ID 
	 , FIRST_NAME
	 , LAST_NAME 
	 , d.DEPARTMENT_NAME 
  FROM EMPLOYEES e
  	 , DEPARTMENTS d
 WHERE e.DEPARTMENT_ID =d.DEPARTMENT_ID 
   AND FIRST_NAME = 'Jennifer'
;

/*
 * 부서명이 'IT'인 사원의 이름과 성을 조회한다.
 */

SELECT FIRST_NAME
	 , LAST_NAME
  FROM EMPLOYEES e 
 WHERE e.DEPARTMENT_ID = (SELECT d.DEPARTMENT_ID
 						  FROM DEPARTMENTS d
 						 WHERE d.DEPARTMENT_NAME = 'IT')
;


/*
 * 직무명(JOB_TITLE)이 'Programmer'인 사원의 이메일을 조회한다.
 */

SELECT EMAIL
  FROM EMPLOYEES e 
 WHERE JOB_ID = (SELECT JOB_ID 
 				   FROM JOBS
 				  WHERE JOB_TITLE = 'Programmer')
;		 


/*
 * 'Beijing' 도시에 있는 부서명을 조회
 */

SELECT d.DEPARTMENT_NAME 
  FROM DEPARTMENTS d
 WHERE d.LOCATION_ID = (SELECT l.LOCATION_ID
 						  FROM LOCATIONS l
 						 WHERE l.CITY = 'Beijing')
;



/*
 * 캐나다에 존재하는 모든 도시명을 조회
 */
SELECT CITY
  FROM LOCATIONS
 WHERE COUNTRY_ID = (SELECT COUNTRY_ID
 					   FROM COUNTRIES
 					  WHERE COUNTRY_NAME = 'Canada')
;


/*
 * 'United States of America' 국가에 있는 모든 부서명과 부서번호를 조회한다.
 */

-- case1
SELECT DEPARTMENT_NAME
	 , DEPARTMENT_ID
  FROM DEPARTMENTS d
 WHERE d.LOCATION_ID IN (SELECT l.LOCATION_ID
 					 	FROM LOCATIONS l 
 					   WHERE l.COUNTRY_ID = (SELECT c.COUNTRY_ID
 					   						   FROM COUNTRIES c
 					   						  WHERE COUNTRY_NAME = 'United States of America'))
;
-- case2
SELECT DEPARTMENT_NAME
	 , DEPARTMENT_ID
  FROM DEPARTMENTS d
 WHERE d.LOCATION_ID IN (SELECT l.LOCATION_ID
 					 	FROM LOCATIONS l
 					 	   , COUNTRIES c
 					   WHERE l.COUNTRY_ID = c.COUNTRY_ID
 					     AND c.COUNTRY_NAME = 'United States of America')
;
-- case3
SELECT DEPARTMENT_NAME
	 , DEPARTMENT_ID
  FROM DEPARTMENTS d
  JOIN LOCATIONS l ON d.LOCATION_ID = l.LOCATION_ID
  JOIN COUNTRIES c ON l.COUNTRY_ID = c.COUNTRY_ID
 WHERE c.COUNTRY_NAME = 'United States of America'
;
-- case4
SELECT DEPARTMENT_NAME
	 , DEPARTMENT_ID
  FROM DEPARTMENTS d
  	 , LOCATIONS l
  	 , COUNTRIES c
 WHERE c.COUNTRY_NAME = 'United States of America'
   AND c.COUNTRY_ID = l.COUNTRY_ID 
   AND l.LOCATION_ID = d.LOCATION_ID
;

SELECT *
  FROM EMPLOYEES E
  	 , DEPARTMENTS D
 WHERE e.DEPARTMENT_ID = d.DEPARTMENT_ID
;

-- ANSI SQL 문법
SELECT *
  FROM EMPLOYEES E
 INNER JOIN DEPARTMENTS D
 	ON E.DEPARTMENT_ID  = D.DEPARTMENT_ID
;

