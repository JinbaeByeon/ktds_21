package gas_station;

public class GasStation {
	public static double[] PRICE_OF_OIL = {0,0,0};

	private Fuel[] fuels = { new Fuel(Fuel.GASOLINE), new Fuel(Fuel.DIESEL), new Fuel(Fuel.LPG) };

	private int money;

	public GasStation() {
		PRICE_OF_OIL[Fuel.GASOLINE] = 1569.67;
		PRICE_OF_OIL[Fuel.DIESEL] = 1651.15;
		PRICE_OF_OIL[Fuel.LPG] = 1039.35;
	}

	public Fuel getFuel(int type) {
		return fuels[type];
	}

	public void setFuels(int type, Fuel fuel) {
		this.fuels[type] = fuel;
	}

	public int getMoney() {
		return money;
	}

	public void setMoney(int money) {
		this.money = money;
	}

	public void income(double money) {
		this.money += money;
	}

	/**
	 * 판매 (type 연료를 amount 만큼 판매)
	 * 
	 * @param type   연료의 종류(GASOLINE, DIESEL, LPG)
	 * @param amount 연료의 양
	 * @return
	 */
	public boolean sell(int type, int amount) {
		boolean res = false;
		
		if (checkRemain(type, amount)) {
			fuels[type].subtract(amount);
			res = true;
		} else {
			System.out.println("기름 잔량이 부족합니다.");
		}
		
		return res;
	}

	/**
	 * type의 연료를 amount만큼 주유가능한지 확인
	 * 
	 * @param type   연료의 종류(GASOLINE, DIESEL, LPG)
	 * @param amount 연료의 양
	 * @return
	 */
	private boolean checkRemain(int type, int amount) {
		boolean res = false;

		if (fuels[type].getRemain() >= amount) {
			res = true;
		}
		return res;
	}

	@Override
	public String toString() {
		String res = "[주유소]\n";
		for (Fuel fuel : fuels) {
			res += fuel + "\n";
		}
		res += "자본금: " + money;
		return res;

	}
}
